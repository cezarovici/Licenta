/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/business-profiles/{businessAccountId}/locations/{locationId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getLocationById"];
        put: operations["updateLocation"];
        post?: never;
        delete: operations["deleteLocation"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business-profiles/{businessAccountId}/locations/{locationId}/operating-hours": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: operations["updateOperatingHours"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business-profiles/{businessAccountId}/locations/{locationId}/facilities": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: operations["updateFacilities"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/register/client": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["registerClient"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/register/business": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["registerBusiness"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business-profiles/{businessAccountId}/locations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllLocationsForBusiness"];
        put?: never;
        post: operations["createLocation"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user-type/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getMyUserType"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/locations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllLocations"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/locations/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getLocationDetails"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/client-profile/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getCurrentUserProfile"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business-profile/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getCurrentBusinessProfile"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business-profiles/{businessAccountId}/locations/{locationId}/photos/{photoId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["deletePhoto"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        LocationUpdateRequest: {
            name: string;
            address: string;
            /** Format: double */
            latitude?: number;
            /** Format: double */
            longitude?: number;
        };
        LocationResponse: {
            /** Format: int64 */
            id: number;
            name: string;
            address: string;
            /** Format: double */
            latitude?: number;
            /** Format: double */
            longitude?: number;
            /** Format: int64 */
            businessId: number;
        };
        LocalTime: {
            /** Format: int32 */
            hour?: number;
            /** Format: int32 */
            minute?: number;
            /** Format: int32 */
            second?: number;
            /** Format: int32 */
            nano?: number;
        };
        OperatingHourDTO: {
            /** @enum {string} */
            dayOfWeek: "MONDAY" | "TUESDAY" | "WEDNESDAY" | "THURSDAY" | "FRIDAY" | "SATURDAY" | "SUNDAY";
            openTime: components["schemas"]["LocalTime"];
            closeTime: components["schemas"]["LocalTime"];
        };
        UpdateOperatingHoursRequest: {
            hours: components["schemas"]["OperatingHourDTO"][];
        };
        UpdateLocationFacilitiesRequest: {
            facilityIds: number[];
        };
        FacilityDTO: {
            /** Format: int64 */
            id?: number;
            name: string;
        };
        CompleteClientRegistrationRequest: {
            firstName: string;
            lastName: string;
            email: string;
            password: string;
            profilePhotoUrl?: string;
            bio?: string;
        };
        CompleteBusinessRegistrationRequest: {
            firstName: string;
            lastName: string;
            email: string;
            password: string;
            businessName: string;
            businessDescription: string;
            locationName: string;
            locationAddress: string;
        };
        LocationCreateRequestDTO: {
            name: string;
            address: string;
            /** Format: double */
            latitude?: number;
            /** Format: double */
            longitude?: number;
            /** Format: int64 */
            businessId: number;
        };
        LocationSummaryDTO: {
            /** Format: int64 */
            id?: number;
            name: string;
            address: string;
            /** Format: double */
            latitude?: number;
            /** Format: double */
            longitude?: number;
        };
        BusinessLocationsDTO: {
            businessName: string;
            website?: string;
            locations: components["schemas"]["LocationSummaryDTO"][];
        };
        LocationDetailDTO: {
            /** Format: int64 */
            id?: number;
            name: string;
            address: string;
            /** Format: double */
            latitude?: number;
            /** Format: double */
            longitude?: number;
            business: components["schemas"]["BusinessLocationsDTO"];
            photos: components["schemas"]["LocationPhotoDTO"][];
            operatingHours: components["schemas"]["OperatingHourDTO"][];
            facilities: components["schemas"]["FacilityDTO"][];
            /** Format: int32 */
            upcomingEventsCount: number;
        };
        LocationPhotoDTO: {
            /** Format: int64 */
            id?: number;
            url: string;
            description?: string;
        };
        ClientProfileDTO: {
            /** Format: int64 */
            accountId: number;
            firstName: string;
            lastName: string;
            profilePhotoUrl: string;
            bio?: string;
        };
        BusinessDetailDTO: {
            businessName: string;
            logoUrl?: string;
            details: components["schemas"]["BusinessDetailsDTO"];
            photos: components["schemas"]["BusinessPhotoDTO"][];
            locations: components["schemas"]["LocationSummaryDTO"][];
        };
        BusinessDetailsDTO: {
            description?: string;
            websiteUrl?: string;
            phoneNumber?: string;
            email?: string;
        };
        BusinessPhotoDTO: {
            /** Format: int64 */
            id: number;
            photoUrl: string;
            description?: string;
            isPrimary: boolean;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getLocationById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessAccountId: number;
                locationId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["LocationResponse"];
                };
            };
        };
    };
    updateLocation: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessAccountId: number;
                locationId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LocationUpdateRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["LocationResponse"];
                };
            };
        };
    };
    deleteLocation: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessAccountId: number;
                locationId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    updateOperatingHours: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessAccountId: number;
                locationId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateOperatingHoursRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["OperatingHourDTO"][];
                };
            };
        };
    };
    updateFacilities: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessAccountId: number;
                locationId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateLocationFacilitiesRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["FacilityDTO"][];
                };
            };
        };
    };
    registerClient: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CompleteClientRegistrationRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    registerBusiness: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CompleteBusinessRegistrationRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getAllLocationsForBusiness: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessAccountId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["LocationResponse"][];
                };
            };
        };
    };
    createLocation: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessAccountId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LocationCreateRequestDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["LocationResponse"];
                };
            };
        };
    };
    getMyUserType: {
        parameters: {
            query?: never;
            header: {
                "X-User-Id": number;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        [key: string]: string;
                    };
                };
            };
        };
    };
    getAllLocations: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["LocationSummaryDTO"][];
                };
            };
        };
    };
    getLocationDetails: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["LocationDetailDTO"];
                };
            };
        };
    };
    getCurrentUserProfile: {
        parameters: {
            query?: never;
            header: {
                "X-User-Id": number;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ClientProfileDTO"];
                };
            };
        };
    };
    getCurrentBusinessProfile: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["BusinessDetailDTO"];
                };
            };
        };
    };
    deletePhoto: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessAccountId: number;
                locationId: number;
                photoId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
