/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/business-profiles/{businessAccountId}/locations/{locationId}/config/operating-hours": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: operations["updateOperatingHours"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business-profiles/{businessAccountId}/locations/{locationId}/config/facilities": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: operations["updateFacilities"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business-profiles/{businessAccountId}/locations/{locationId}/config/booking-rules": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: operations["updateBookingRules"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business-profile/logo": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update business logo URL */
        put: operations["updateBusinessLogo"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/register/client": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["registerClient"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/register/business": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["registerBusiness"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/events/{eventId}/join": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Join an event (for authenticated clients) */
        post: operations["joinEvent"];
        /** Leave an event (for authenticated clients) */
        delete: operations["leaveEvent"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business-profiles/{businessAccountId}/locations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllLocationsForBusiness"];
        put?: never;
        post: operations["createLocation"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business-profiles/{businessAccountId}/locations/{locationId}/photos": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["addPhoto"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business-profiles/{businessAccountId}/locations/{locationId}/config/sport-configurations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["addSportConfiguration"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business-profiles/{businessAccountId}/locations/{locationId}/config/pricing-rules": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["addPricingRule"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business-profiles/{businessAccountId}/locations/create-complete": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["createCompleteLocation"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business-profile/photos": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add a new photo to the business profile */
        post: operations["addPhoto_1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business-profiles/{businessAccountId}/locations/{locationId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getLocationById"];
        put?: never;
        post?: never;
        delete: operations["deleteLocation"];
        options?: never;
        head?: never;
        patch: operations["updateLocationDetails"];
        trace?: never;
    };
    "/api/business-profile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get current business profile details */
        get: operations["getCurrentBusinessProfile"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update business details (partial update) */
        patch: operations["updateBusinessDetails"];
        trace?: never;
    };
    "/api/user-type/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getMyUserType"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/locations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllLocations"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/locations/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getLocationDetails"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a list of all upcoming public events */
        get: operations["getAllUpcomingEvents"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/events/{eventId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get detailed information about a specific event */
        get: operations["getEventDetails"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/events/my-participations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all events the current client is participating in */
        get: operations["getMyParticipations"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/client-profile/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getCurrentUserProfile"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/businesses": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["searchBusinesses"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/businesses/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getBusinessById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business-profile/{businessAccountId}/photos": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllBusinessPhotos"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business-profile/locations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all locations for the current business */
        get: operations["getMyBusinessLocations"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/register/business/{businessId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["unregisterBusiness"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business-profiles/{businessAccountId}/locations/{locationId}/photos/{photoId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["deletePhoto"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business-profiles/{businessAccountId}/locations/{locationId}/config/sport-configurations/{configId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["deleteSportConfiguration"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business-profiles/{businessAccountId}/locations/{locationId}/config/pricing-rules/{ruleId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["deletePricingRule"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/business-profile/photos/{photoId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete a photo by its ID */
        delete: operations["deletePhoto_1"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        LocalTime: {
            /** Format: int32 */
            hour?: number;
            /** Format: int32 */
            minute?: number;
            /** Format: int32 */
            second?: number;
            /** Format: int32 */
            nano?: number;
        };
        OperatingHourDTO: {
            dayOfWeek: string;
            openTime: components["schemas"]["LocalTime"];
            closeTime: components["schemas"]["LocalTime"];
        };
        UpdateOperatingHoursRequest: {
            hours: components["schemas"]["OperatingHourDTO"][];
        };
        UpdateFacilitiesRequest: {
            facilityIds: number[];
        };
        FacilityDTO: {
            /** Format: int64 */
            id?: number;
            name?: string;
        };
        BookingRulesUpdateRequest: {
            /** Format: int32 */
            maxBookingAdvanceDays: number;
            /** @enum {string} */
            cancellationPolicy: "FLEXIBLE" | "MODERATE" | "STRICT";
        };
        BookingRulesInfoDTO: {
            /** Format: int32 */
            maxBookingAdvanceDays?: number;
            /** @enum {string} */
            cancellationPolicy: "FLEXIBLE" | "MODERATE" | "STRICT";
        };
        BusinessLocationsDTO: {
            /** Format: int64 */
            id: number;
            businessName: string;
            website?: string;
            locations: components["schemas"]["LocationSummaryDTO"][];
        };
        LocationDetailDTO: {
            /** Format: int64 */
            id: number;
            name: string;
            address: string;
            /** Format: double */
            latitude?: number;
            /** Format: double */
            longitude?: number;
            business: components["schemas"]["BusinessLocationsDTO"];
            photos: components["schemas"]["LocationPhotoDTO"][];
            operatingHours: components["schemas"]["OperatingHourDTO"][];
            facilities: components["schemas"]["FacilityDTO"][];
            /** Format: int32 */
            upcomingEventsCount: number;
            pricingRules: components["schemas"]["PricingRuleDTO"][];
            sportConfigurations: components["schemas"]["SportConfigurationDTO"][];
            bookingRules: components["schemas"]["BookingRulesInfoDTO"];
        };
        LocationPhotoDTO: {
            /** Format: int64 */
            id?: number;
            photoUrl: string;
            description?: string;
            isPrimary: boolean;
        };
        LocationSummaryDTO: {
            /** Format: int64 */
            id: number;
            name: string;
            address: string;
            /** Format: double */
            latitude?: number;
            /** Format: double */
            longitude?: number;
        };
        PricingRuleDTO: {
            /** Format: int64 */
            id?: number;
            ruleName: string;
            daysOfWeek: string[];
            startTime?: components["schemas"]["LocalTime"];
            endTime?: components["schemas"]["LocalTime"];
            pricePerHour: number;
        };
        SportConfigurationDTO: {
            /** Format: int64 */
            id?: number;
            sportName: string;
            surfaceType?: string;
            recommendedCapacity?: string;
            /** Format: int32 */
            minBookingDuration: number;
            /** Format: int32 */
            bookingSlotIncrement: number;
        };
        UpdateLogoRequest: {
            logoUrl: string;
        };
        Unit: Record<string, never>;
        CompleteClientRegistrationRequest: {
            firstName: string;
            lastName: string;
            email: string;
            password: string;
            profilePhotoUrl?: string;
            bio?: string;
        };
        CompleteBusinessRegistrationRequest: {
            firstName: string;
            lastName: string;
            email: string;
            password: string;
            businessName: string;
            businessDescription: string;
            locationName: string;
            locationAddress: string;
        };
        LocationCreateRequestDTO: {
            name: string;
            address: string;
            /** Format: double */
            latitude?: number;
            /** Format: double */
            longitude?: number;
            /** Format: int64 */
            businessId: number;
        };
        LocationResponse: {
            /** Format: int64 */
            id: number;
            name: string;
            address: string;
            /** Format: double */
            latitude?: number;
            /** Format: double */
            longitude?: number;
            /** Format: int64 */
            businessId: number;
        };
        PhotoCreateRequest: {
            url: string;
            description?: string;
        };
        CreateCompleteLocationRequestDTO: {
            name: string;
            address: string;
            /** Format: double */
            latitude?: number;
            /** Format: double */
            longitude?: number;
            photos?: components["schemas"]["PhotoCreateRequest"][];
            operatingHours?: components["schemas"]["OperatingHourDTO"][];
            facilityIds?: number[];
            pricingRules?: components["schemas"]["PricingRuleDTO"][];
            sportConfigurations?: components["schemas"]["SportConfigurationDTO"][];
            bookingRules?: components["schemas"]["BookingRulesUpdateRequest"];
        };
        BusinessPhotoDTO: {
            /** Format: int64 */
            id: number;
            photoUrl: string;
            description?: string;
            isPrimary: boolean;
        };
        LocationUpdateRequest: {
            name?: string;
            address?: string;
            /** Format: double */
            latitude?: number;
            /** Format: double */
            longitude?: number;
        };
        BusinessUpdateRequest: {
            name?: string;
            logoUrl?: string;
            description?: string;
            websiteUrl?: string;
            phoneNumber?: string;
            email?: string;
        };
        BusinessDTO: {
            /** Format: int64 */
            id: number;
            name: string;
            logoUrl?: string;
            photos: components["schemas"]["BusinessPhotoDTO"][];
            locations: components["schemas"]["LocationSummaryDTO"][];
            description?: string;
            websiteUrl?: string;
            phoneNumber?: string;
            email?: string;
        };
        EventSummaryDTO: {
            /** Format: int64 */
            id?: number;
            title: string;
            sport: string;
            /** Format: date-time */
            eventDateTime: string;
            /** @enum {string} */
            type: "PUBLIC" | "PRIVATE";
            /** @enum {string} */
            status: "PENDING_APPROVAL" | "PLANNED" | "ACTIVE" | "COMPLETED" | "CANCELLED";
            location: components["schemas"]["LocationSummaryDTO"];
            /** Format: int32 */
            participantsCount: number;
        };
        ClientDTO: {
            /** Format: int64 */
            id?: number;
            username: string;
        };
        EventDetailDTO: {
            /** Format: int64 */
            id?: number;
            title: string;
            sport: string;
            /** Format: date-time */
            eventDateTime: string;
            /** @enum {string} */
            type: "PUBLIC" | "PRIVATE";
            /** @enum {string} */
            status: "PENDING_APPROVAL" | "PLANNED" | "ACTIVE" | "COMPLETED" | "CANCELLED";
            creator: components["schemas"]["ClientDTO"];
            location: components["schemas"]["LocationEventsDTO"];
            details?: components["schemas"]["EventDetailsDTO"];
            photos: components["schemas"]["EventPhotoDTO"][];
            participations: components["schemas"]["EventParticipationDTO"][];
            /** Format: int32 */
            participantsCount: number;
        };
        EventDetailsDTO: {
            description?: string;
            /** Format: int32 */
            maxParticipants?: number;
            costPerPerson: number;
            /** @enum {string} */
            skillLevel: "BEGINNER" | "INTERMEDIATE" | "ADVANCED" | "ALL_LEVELS";
        };
        EventParticipationDTO: {
            client: components["schemas"]["ClientDTO"];
            /** Format: date-time */
            joinDateTime: string;
        };
        EventPhotoDTO: {
            /** Format: int64 */
            id?: number;
            photoUrl: string;
            caption?: string;
        };
        LocationEventsDTO: {
            /** Format: int64 */
            id?: number;
            name: string;
            address: string;
            events: components["schemas"]["EventSummaryDTO"][];
        };
        ClientProfileDTO: {
            /** Format: int64 */
            accountId: number;
            firstName: string;
            lastName: string;
            profilePhotoUrl: string;
            bio?: string;
        };
        BusinessSummaryDTO: {
            /** Format: int64 */
            id: number;
            name: string;
            logoUrl?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    updateOperatingHours: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessAccountId: number;
                locationId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateOperatingHoursRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["OperatingHourDTO"][];
                };
            };
        };
    };
    updateFacilities: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessAccountId: number;
                locationId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateFacilitiesRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["FacilityDTO"][];
                };
            };
        };
    };
    updateBookingRules: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessAccountId: number;
                locationId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BookingRulesUpdateRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["LocationDetailDTO"];
                };
            };
        };
    };
    updateBusinessLogo: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateLogoRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Unit"];
                };
            };
        };
    };
    registerClient: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CompleteClientRegistrationRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    registerBusiness: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CompleteBusinessRegistrationRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    joinEvent: {
        parameters: {
            query?: never;
            header: {
                "X-User-Id": number;
            };
            path: {
                eventId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Unit"];
                };
            };
        };
    };
    leaveEvent: {
        parameters: {
            query?: never;
            header: {
                "X-User-Id": number;
            };
            path: {
                eventId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Unit"];
                };
            };
        };
    };
    getAllLocationsForBusiness: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessAccountId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["LocationResponse"][];
                };
            };
        };
    };
    createLocation: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessAccountId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LocationCreateRequestDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["LocationResponse"];
                };
            };
        };
    };
    addPhoto: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessAccountId: number;
                locationId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PhotoCreateRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["LocationPhotoDTO"];
                };
            };
        };
    };
    addSportConfiguration: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessAccountId: number;
                locationId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SportConfigurationDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["SportConfigurationDTO"];
                };
            };
        };
    };
    addPricingRule: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessAccountId: number;
                locationId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PricingRuleDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PricingRuleDTO"];
                };
            };
        };
    };
    createCompleteLocation: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessAccountId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateCompleteLocationRequestDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["LocationDetailDTO"];
                };
            };
        };
    };
    addPhoto_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PhotoCreateRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["BusinessPhotoDTO"];
                };
            };
        };
    };
    getLocationById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessAccountId: number;
                locationId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["LocationDetailDTO"];
                };
            };
        };
    };
    deleteLocation: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessAccountId: number;
                locationId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    updateLocationDetails: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessAccountId: number;
                locationId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LocationUpdateRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["LocationResponse"];
                };
            };
        };
    };
    getCurrentBusinessProfile: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["BusinessDTO"];
                };
            };
        };
    };
    updateBusinessDetails: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BusinessUpdateRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["BusinessDTO"];
                };
            };
        };
    };
    getMyUserType: {
        parameters: {
            query?: never;
            header: {
                "X-User-Id": number;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        [key: string]: string;
                    };
                };
            };
        };
    };
    getAllLocations: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["LocationSummaryDTO"][];
                };
            };
        };
    };
    getLocationDetails: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["LocationDetailDTO"];
                };
            };
        };
    };
    getAllUpcomingEvents: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["EventSummaryDTO"][];
                };
            };
        };
    };
    getEventDetails: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                eventId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["EventDetailDTO"];
                };
            };
        };
    };
    getMyParticipations: {
        parameters: {
            query?: never;
            header: {
                "X-User-Id": number;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["EventSummaryDTO"][];
                };
            };
        };
    };
    getCurrentUserProfile: {
        parameters: {
            query?: never;
            header: {
                "X-User-Id": number;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ClientProfileDTO"];
                };
            };
        };
    };
    searchBusinesses: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["BusinessSummaryDTO"][];
                };
            };
        };
    };
    getBusinessById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["BusinessDTO"];
                };
            };
        };
    };
    getAllBusinessPhotos: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessAccountId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["LocationPhotoDTO"][];
                };
            };
        };
    };
    getMyBusinessLocations: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["BusinessLocationsDTO"];
                };
            };
        };
    };
    unregisterBusiness: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deletePhoto: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessAccountId: number;
                locationId: number;
                photoId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deleteSportConfiguration: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessAccountId: number;
                locationId: number;
                configId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deletePricingRule: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                businessAccountId: number;
                locationId: number;
                ruleId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deletePhoto_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                photoId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
